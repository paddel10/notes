{"version":3,"sources":["app.js","filters/and.js","filters/noteTitle.js","filters/wordCount.js","services/debounce.js","services/is.js","services/notesmodel.js","services/savequeue.js","services/urlFinder.js","controllers/appcontroller.js","controllers/notecontroller.js","controllers/notescontroller.js","directives/autofocus.js","directives/editor.js","directives/tooltip.js"],"names":["angular","$","requestToken","SimpleMDE","undefined","app","module","config","$provide","$routeProvider","RestangularProvider","$httpProvider","$windowProvider","defaults","headers","common","requesttoken","value","saveInterval","when","templateUrl","controller","resolve","note","$route","$q","is","Restangular","deferred","defer","noteId","current","params","loading","one","get","then","reject","promise","otherwise","redirectTo","baseUrl","OC","generateUrl","setBaseUrl","run","$rootScope","$location","NotesModel","attr","filePath","$on","notes","getAll","length","sorted","sort","a","b","modified","path","id","filter","$filter","items","searchString","searchValues","split","filtered","i","trim","replace","wordCount","search","window","n","factory","$timeout","func","delay","timeout","context","this","args","arguments","cancel","apply","notesIds","prototype","addAll","add","updateIfExists","error","dialogs","alert","errorMessage","t","updated","isDefined","title","content","favorite","push","remove","splice","SaveQueue","_queue","_flushLock","_manualSaveActive","_flush","addManual","keys","Object","self","requests","put","_noteUpdateRequest","bind","_saveFailed","all","response","unsaved","isSaving","isManualSaving","element","prev","next","text","$scope","init","lastViewedNote","Notification","showTemporary","$routeParams","debounce","$document","updateTitle","onEdit","autoSave","manualSave","unbind","event","ctrlKey","metaKey","String","fromCharCode","which","toLowerCase","preventDefault","toggleDistractionFree","launchIntoFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","document","mozCancelFullScreen","webkitExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","$window","route","folderSelectorOpen","filterCategory","filterFavorite","orderRecent","orderAlpha","filterOrder","notesResource","getList","create","post","$emit","toggleFavorite","customPUT","toggleFolderSelector","setFilter","category","noteFilter","startsWith","nthIndexOf","str","pattern","indexOf","getCategories","_","memoize","maxLevel","categories","cat","index","substring","result","name","count","onbeforeunload","directive","restrict","link","scope","focus","urlFinder","simplemde","spellChecker","autoDownloadFontAwesome","toolbar","status","forceSync","editorElement","codemirror","getWrapperElement","on","$apply","url","open","tooltip","container","jQuery","oc_requesttoken"],"mappings":"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","file":"app.min.js","sourcesContent":["/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n/* jshint unused: false */\nvar app = angular.module('Notes', ['restangular', 'ngRoute']).\nconfig(function($provide, $routeProvider, RestangularProvider, $httpProvider,\n                $windowProvider) {\n    'use strict';\n\n    // Always send the CSRF token by default\n    $httpProvider.defaults.headers.common.requesttoken = requestToken;\n\n    // you have to use $provide inside the config method to provide a globally\n    // shared and injectable object\n    $provide.value('Constants', {\n        saveInterval: 5*1000  // miliseconds\n    });\n\n    // define your routes that that load templates into the ng-view\n    $routeProvider.when('/notes/:noteId', {\n        templateUrl: 'note.html',\n        controller: 'NoteController',\n        resolve: {\n            // $routeParams does not work inside resolve so use $route\n            // note is the name of the argument that will be injected into the\n            // controller\n            /* @ngInject */\n            note: function ($route, $q, is, Restangular) {\n\n                var deferred = $q.defer();\n                var noteId = $route.current.params.noteId;\n                is.loading = true;\n\n                Restangular.one('notes', noteId).get().then(function (note) {\n                    is.loading = false;\n                    deferred.resolve(note);\n                }, function () {\n                    is.loading = false;\n                    deferred.reject();\n                });\n\n                return deferred.promise;\n            }\n        }\n    }).otherwise({\n        redirectTo: '/'\n    });\n\n    var baseUrl = OC.generateUrl('/apps/notes');\n    RestangularProvider.setBaseUrl(baseUrl);\n\n\n\n}).run(function ($rootScope, $location, NotesModel) {\n    'use strict';\n\n    $('link[rel=\"shortcut icon\"]').attr(\n\t\t    'href',\n\t\t    OC.filePath('notes', 'img', 'favicon.png')\n    );\n\n    // handle route errors\n    $rootScope.$on('$routeChangeError', function () {\n        var notes = NotesModel.getAll();\n\n        // route change error should redirect to the latest note if possible\n        if (notes.length > 0) {\n            var sorted = notes.sort(function (a, b) {\n                if(a.modified > b.modified) {\n                    return 1;\n                } else if(a.modified < b.modified) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n\n            var note = notes[sorted.length-1];\n            $location.path('/notes/' + note.id);\n        } else {\n            $location.path('/');\n        }\n    });\n});\n","/**\n * filter by multiple words (AND operation)\n */\napp.filter('and', ['$filter', function ($filter) {\n\t'use strict';\n\treturn function (items, searchString) {\n\t\tvar searchValues = searchString.split(' ');\n\t\tvar filtered = items;\n\t\tfor(var i in searchValues) {\n\t\t\tfiltered = $filter('filter')(filtered, searchValues[i]);\n\t\t}\n\t\treturn filtered;\n\t};\n}]);\n","/**\n * removes whitespaces and leading #\n */\napp.filter('noteTitle', function () {\n\t'use strict';\n\treturn function (value) {\n        \tvalue = value.split('\\n')[0] || 'newNote';\n\t\treturn value.trim().replace(/^#+/g, '');\n\t};\n});\n","app.filter('wordCount', function () {\n\t'use strict';\n\treturn function (value) {\n\t\tif (value && (typeof value === 'string')) {\n\t\t\tvar wordCount = value.split(/\\s+/).filter(\n\t\t\t\t// only count words containing\n\t\t\t\t// at least one alphanumeric character\n\t\t\t\tfunction(value) {\n\t\t\t\t\treturn value.search(/[A-Za-z0-9]/) !== -1;\n\t\t\t\t}\n\t\t\t).length;\n\t\t\treturn window.n('notes', '%n word', '%n words', wordCount);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t};\n});\n","/**\n * Copyright (c) 2016, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('debounce', ['$timeout', function($timeout) {\n\t'use strict';\n\n\treturn function debounce(func, delay) {\n\t\tvar timeout;\n\n\t\treturn function() {\n\t\t\tvar context = this, args = arguments;\n\n\t\t\tif(timeout) {\n\t\t\t\t$timeout.cancel(timeout);\n\t\t\t}\n\t\t\ttimeout = $timeout(function() {\n\t\t\t\tfunc.apply(context, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('is', function () {\n    'use strict';\n\n    return {\n        loading: false\n    };\n});","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// take care of fileconflicts by appending a number\napp.factory('NotesModel', function () {\n    'use strict';\n\n    var NotesModel = function () {\n        this.notes = [];\n        this.notesIds = {};\n    };\n\n    NotesModel.prototype = {\n        addAll: function (notes) {\n            for(var i=0; i<notes.length; i+=1) {\n                this.add(notes[i]);\n            }\n        },\n        add: function(note) {\n            this.updateIfExists(note);\n        },\n        getAll: function () {\n            return this.notes;\n        },\n        get: function (id) {\n            if(this.notesIds[id].error) {\n                OC.dialogs.alert(\n                    this.notesIds[id].errorMessage,\n                    t('notes','An error occurred!')\n                );\n                return false;\n            }\n            return this.notesIds[id];\n        },\n        updateIfExists: function(updated) {\n            var note = this.notesIds[updated.id];\n            if(angular.isDefined(note)) {\n                note.title = updated.title;\n                note.modified = updated.modified;\n                note.content = updated.content;\n                note.favorite = updated.favorite;\n            } else {\n                this.notes.push(updated);\n                this.notesIds[updated.id] = updated;\n            }\n        },\n        remove: function (id) {\n            for(var i=0; i<this.notes.length; i+=1) {\n                var note = this.notes[i];\n                if(note.id === id) {\n                    this.notes.splice(i, 1);\n                    delete this.notesIds[id];\n                    break;\n                }\n            }\n        }\n    };\n\n    return new NotesModel();\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('SaveQueue', function($q) {\n    'use strict';\n\n    var SaveQueue = function () {\n        this._queue = {};\n        this._flushLock = false;\n        this._manualSaveActive = false;\n    };\n\n    SaveQueue.prototype = {\n        add: function (note) {\n            this._queue[note.id] = note;\n            this._flush();\n        },\n        addManual: function (note) {\n            this._manualSaveActive = true;\n            this.add(note);\n        },\n        _flush: function () {\n            // if there are no changes dont execute the requests\n            var keys = Object.keys(this._queue);\n            if(keys.length === 0 || this._flushLock) {\n                return;\n            } else {\n                this._flushLock = true;\n            }\n\n            var self = this;\n            var requests = [];\n\n            // iterate over updated objects and run an update request for\n            // each one of them\n            for(var i=0; i<keys.length; i+=1) {\n                var note = this._queue[keys[i]];\n                // if the update finished, update the modified and title\n                // attributes on the note\n                requests.push(note.put().then(\n                    this._noteUpdateRequest.bind(null, note))\n                    .catch(this._saveFailed.bind(null, note))\n                );\n            }\n            this._queue = {};\n\n            // if all update requests are completed, run the flush\n            // again to update the next batch of queued notes\n            $q.all(requests).then(function () {\n                self._flushLock = false;\n                self._flush();\n                self._manualSaveActive = false;\n            });\n        },\n        _noteUpdateRequest: function (note, response) {\n            note.error = false;\n            note.title = response.title;\n            note.modified = response.modified;\n            if(response.content === note.content) {\n                note.unsaved = false;\n            }\n        },\n        _saveFailed: function (note) {\n            note.error = true;\n        },\n        isSaving: function () {\n            return this._flushLock;\n        },\n        isManualSaving: function () {\n            return this._manualSaveActive;\n        },\n    };\n\n    return new SaveQueue();\n});\n","/**\n * Copyright (c) 2016, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// finds the url which should be opened when a link is clicked\n// example: '[hello](http://example.com)'\napp.factory('urlFinder', [function() {\n\t'use strict';\n\n\treturn function urlFinder(element) {\n\t\telement = $(element);\n\n\t\t// special case: click on ')'\n\t\tif(element.is('.cm-url.cm-formatting')) {\n\t\t\tif(element.prev().length !== 0) {\n\t\t\t\telement = element.prev();\n\t\t\t}\n\t\t}\n\n\t\t// skip '[hello]'\n\t\twhile(element.is('.cm-link')) {\n\t\t\telement = element.next();\n\t\t}\n\n\t\t// skip '('\n\t\twhile(element.is('.cm-url.cm-formatting')) {\n\t\t\telement = element.next();\n\t\t}\n\n\t\t// check if we actually have a cm-url\n\t\tif(element.is('.cm-url:not(.cm-formatting)')) {\n\t\t\treturn element.text();\n\t\t}\n\n\t\treturn undefined;\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.controller('AppController', function ($scope, $location, is) {\n    'use strict';\n\n    $scope.is = is;\n\n    $scope.init = function (lastViewedNote,errorMessage) {\n\n\n        if(lastViewedNote !== 0) {\n            $location.path('/notes/' + lastViewedNote);\n        }\n        if(errorMessage !==0){\n            OC.Notification.showTemporary(errorMessage);\n        }\n    };\n\n    $scope.search = '';\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.controller('NoteController', function($routeParams, $scope, NotesModel,\n                                          SaveQueue, note, debounce,\n                                          $document) {\n    'use strict';\n\n    NotesModel.updateIfExists(note);\n\n    $scope.note = NotesModel.get($routeParams.noteId);\n\n    $scope.isSaving = function () {\n        return SaveQueue.isSaving();\n    };\n    $scope.isManualSaving = function () {\n        return SaveQueue.isManualSaving();\n    };\n\n    $scope.updateTitle = function () {\n        $scope.note.title = $scope.note.content.split('\\n')[0] ||\n            t('notes', 'New note');\n    };\n\n    $scope.onEdit = function() {\n        var note = $scope.note;\n        note.unsaved = true;\n        $scope.autoSave(note);\n    };\n\n    $scope.autoSave = debounce(function(note) {\n        SaveQueue.add(note);\n    }, 1000);\n\n    $scope.manualSave = function() {\n        var note = $scope.note;\n        note.error = false;\n        SaveQueue.addManual(note);\n    };\n\n    $document.unbind('keypress.notes.save');\n    $document.bind('keypress.notes.save', function(event) {\n        if(event.ctrlKey || event.metaKey) {\n            switch(String.fromCharCode(event.which).toLowerCase()) {\n                case 's':\n                    event.preventDefault();\n                    $scope.manualSave();\n                    break;\n            }\n        }\n    });\n\n    $scope.toggleDistractionFree = function() {\n        function launchIntoFullscreen(element) {\n            if(element.requestFullscreen) {\n                element.requestFullscreen();\n            } else if(element.mozRequestFullScreen) {\n                element.mozRequestFullScreen();\n            } else if(element.webkitRequestFullscreen) {\n                element.webkitRequestFullscreen();\n            } else if(element.msRequestFullscreen) {\n                element.msRequestFullscreen();\n            }\n        }\n\n        function exitFullscreen() {\n            if(document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if(document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if(document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            }\n        }\n\n        if(document.fullscreenElement ||\n           document.mozFullScreenElement ||\n           document.webkitFullscreenElement) {\n            exitFullscreen();\n        } else {\n            launchIntoFullscreen(document.getElementById('app-content'));\n        }\n    };\n\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// This is available by using ng-controller=\"NotesController\" in your HTML\napp.controller('NotesController', function($routeParams, $scope, $location,\n                                           Restangular, NotesModel, $window) {\n    'use strict';\n\n    $scope.route = $routeParams;\n    $scope.notes = NotesModel.getAll();\n\n    $scope.folderSelectorOpen = false;\n    $scope.filterCategory = null;\n    $scope.filterFavorite = false;\n\n    $scope.orderRecent = ['-favorite','-modified'];\n    $scope.orderAlpha = ['-favorite','title'];\n    $scope.filterOrder = $scope.orderRecent;\n\n    var notesResource = Restangular.all('notes');\n\n    // initial request for getting all notes\n    notesResource.getList().then(function (notes) {\n        NotesModel.addAll(notes);\n    });\n\n    $scope.create = function () {\n        notesResource.post().then(function (note) {\n            NotesModel.add(note);\n            $location.path('/notes/' + note.id);\n        });\n    };\n\n    $scope.delete = function (noteId) {\n        var note = NotesModel.get(noteId);\n        note.remove().then(function () {\n            NotesModel.remove(noteId);\n            $scope.$emit('$routeChangeError');\n        });\n    };\n\n    $scope.toggleFavorite = function (noteId) {\n        var note = NotesModel.get(noteId);\n        note.customPUT({favorite: !note.favorite},\n            'favorite', {}, {}).then(function (favorite) {\n            note.favorite = favorite ? true : false;\n        });\n    };\n\n    $scope.toggleFolderSelector = function () {\n        $scope.folderSelectorOpen = !$scope.folderSelectorOpen;\n    };\n\n    $scope.setFilter = function (category, favorite) {\n        $scope.filterOrder = category===null ? $scope.orderRecent : $scope.orderAlpha;\n        $scope.filterCategory = category;\n        $scope.filterFavorite = favorite;\n        $scope.folderSelectorOpen = false;\n    };\n\n    $scope.noteFilter = function (note) {\n        if($scope.filterFavorite && !note.favorite) {\n            return false;\n        }\n        if($scope.filterCategory!==null) {\n            return note.category===$scope.filterCategory || (note.category!==null && note.category.startsWith($scope.filterCategory+'/'));\n        }\n        return true;\n    };\n\n    $scope.nthIndexOf = function(str, pattern, n) {\n\t        var i = -1;\n\t        while (n-- && i++ < str.length) {\n\t\t\t        i = str.indexOf(pattern, i);\n\t\t\t        if (i < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t    }\n\t        return i;\n    };\n\n\t$scope.getCategories = _.memoize(function (notes, maxLevel) {\n\t\tvar categories = {};\n\t\tfor(var i=0; i<notes.length; i++) {\n\t\t\tvar cat = notes[i].category;\n\t\t\tif(maxLevel>0) {\n\t\t\t\tvar index = $scope.nthIndexOf(cat, '/', maxLevel);\n\t\t\t\tif(index>0) {\n\t\t\t\t\tcat = cat.substring(0, index);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(categories[cat]===undefined) {\n\t\t\t\tcategories[cat] = 1;\n\t\t\t} else {\n\t\t\t\tcategories[cat]++;\n\t\t\t}\n\t\t}\n\t\tvar result = [];\n\t\tfor(var category in categories) {\n\t\t\tresult.push({ name: category, count: categories[category]});\n\t\t}\n\t\treturn result;\n\t});\n\n    $window.onbeforeunload = function() {\n        var notes = NotesModel.getAll();\n        for(var i=0; i<notes.length; i++) {\n            if(notes[i].unsaved) {\n                return t('notes', 'There are unsaved notes. Leaving ' +\n                                  'the page will discard all changes!');\n            }\n        }\n        return null;\n    };\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('notesAutofocus', function () {\n    'use strict';\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.focus();\n        }\n    };\n});\n","/*global SimpleMDE*/\napp.directive('editor', ['$timeout',\n                         'urlFinder',\n                         function ($timeout, urlFinder) {\n\t'use strict';\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element) {\n\n\t\t\tvar simplemde = new SimpleMDE({\n\t\t\t\telement: element[0],\n\t\t\t\tspellChecker: false,\n\t\t\t\tautoDownloadFontAwesome: false,\n\t\t\t\ttoolbar: false,\n\t\t\t\tstatus: false,\n\t\t\t\tforceSync: true\n\t\t\t});\n\t\t\tvar editorElement = $(simplemde.codemirror.getWrapperElement());\n\n\t\t\tsimplemde.value(scope.note.content);\n\n\t\t\tsimplemde.codemirror.on('change', function() {\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tscope.note.content = simplemde.value();\n\t\t\t\t\t\tscope.onEdit();\n\t\t\t\t\t\tscope.updateTitle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\teditorElement.on('click', '.cm-link, .cm-url', function(event) {\n\t\t\t\tif(event.ctrlKey) {\n\t\t\t\t\tvar url = urlFinder(this);\n\t\t\t\t\tif(angular.isDefined(url)) {\n\t\t\t\t\t\twindow.open(url, '_blank');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('notesTooltip', function () {\n    'use strict';\n\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.tooltip({'container': 'body'});\n\n            element.on('$destroy', function() {\n                element.tooltip('hide');\n            });\n        }\n    };\n});\n"]}